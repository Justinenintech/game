<?xml version="1.0" encoding="UTF-8"?>
<configuration
	xmlns="http://ch.qos.logback/xml/ns/logback"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://ch.qos.logback/xml/ns/logback https://raw.githubusercontent.com/enricopulatzo/logback-XSD/master/src/main/xsd/logback.xsd">

	<property name="app_name" value="QGLoadGenerator" />
	<contextName>${app_name}</contextName>

	<appender name="stdout"
		class="ch.qos.logback.core.ConsoleAppender">
		<!--这里定义了DEBUG，也就是控制台不会输出比ERROR级别小的日志 -->
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>DEBUG</level>
		</filter>
		<!-- encoder 默认配置为PatternLayoutEncoder -->
		<!--定义控制台输出格式 -->
		<encoder>
			<pattern>%d %-5level %logger{36} [%file : %line] - %msg%n</pattern>
		</encoder>
	</appender>


	<appender name="file"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!--定义日志输出的路径 -->
		<!--这里的scheduler.manager.server.home 没有在上面的配置中设定，所以会使用java启动时配置的值 -->
		<!--比如通过 java -Dscheduler.manager.server.home=/path/to XXXX 配置该属性 -->
		<file>logs/${app_name}.log</file>
		<!--定义日志滚动的策略 -->
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--定义文件滚动时的文件名的格式 -->
			<fileNamePattern>logs/${app.app_name}.%d{yyyy-MM-dd.HH}.log
            </fileNamePattern>
			<!--60天的时间周期，日志量最大20GB -->
			<maxHistory>1</maxHistory>
			<!-- 该属性在 1.1.6版本后 才开始支持 -->
			<totalSizeCap>10MB</totalSizeCap>
		</rollingPolicy>

		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<!--每个日志文件最大100MB -->
			<maxFileSize>100MB</maxFileSize>
		</triggeringPolicy>
		<!--定义输出格式 -->
		<encoder>
			<pattern>%d %-5level %logger{36} [%file : %line] - %msg%n</pattern>
		</encoder>
	</appender>

	<!--root是默认的logger 这里设定输出级别是debug -->
	<root level="debug">
		<!--定义了两个appender，日志会通过往这两个appender里面写 -->
		<appender-ref ref="stdout" />
		<appender-ref ref="file" />
	</root>


</configuration>